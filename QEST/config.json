### Configuration file for qopen package in JSON format
# Comments are indicated with "#" and ignored while parsing

{
#Log file output
"logfile": "log.log",
#The higher the log level the more verbose is the logging to the file (1-3)
"loglevel": 3,
#Logging default config
"log": null,

#Path and filename to inventory
"inv": "../input/inv.xml",
#Path and filename to event files (format supported by ObsPy)
"events_": "../input/evt/evt.xml",
#Path and filename to waveform files (format supported by ObsPy)
"stream": "../input/wav/*.mseed",
#Path and filename for starting values (see Qopen result file)
"startvals": "../input/01_results_qopen.json",

#Define one frequency band
# step - difference between neighboring central frequencies in octave
# (x octave corresponds to a factor of 2**x between the frequencies)
# width - difference between higher and lower corner frequency in octave
# max - maximal central frequency,
# min - minimal possible central frequency.
# cfreqs - list of central frequencies (min, max and step are ignored)
# fbands - list frequency bands (all other entries are ignored)
#"freqs": {"step": 1, "width": 1, "max": 6, "min": 0.3},
#"freqs": {"fbands": [[1, 2], [2, 4], [4, 8]]},
"freqs": {"cfreqs": [4.2], "width": 1},

#Filter options passed to obspy.core.Stream-filter for filtering
"filter_": {"corners": 2, "zerophase": true},
#List of time windows to determine the noise level
#Start time and end time can be strings, e.g.
#'P-10s', 'S+10s', 'OT+10s' (seconds relative to P-wave pick,
#S-wave pick or origin time
"noise_windows": [["OT-10s","OT-4s"],["OT-4s","OT+0s"]],
#List of time windows to be used for the inversion
#First entry ist the start time of the time window
#Second entry is the end time of the timw window, e.g.
#a maximum of 40 s after S-onset or 2 times the SNR
"coda_window": ["S-1s", ["S+40s", "2SNR"]],
#Skip stations if one of these conditions is fulfilled
#distance between station and event ist larger than x km
#coda window is shorter than 4 s
"skip": {"coda_window": 4, "distance": 150},

#Smooth the coda over x s
"smooth": 2,
#Window used for smoothing, can be 
#'flat', 'hanning', 'hamming', 'bartlett', 'blackman'
"smooth_window": "bartlett",
#Cut coda if a local minimum is present in the data (e.g.
#second earthquake. Coda can be smoothed, if the ratio between a maximum and
#the lowest minimum before the maximum is above a threshold the coda window
#will end at time of the minimum, bulk_win_len is a protection length in s
#after the S-onset, no cut off before bulk_win_len is over
"cut_coda": {"smooth": 2, "ratio": 2.0, "bulk_win_len": 2},
#Use picks given in event file
"use_picks": true,
#Otherwise use S-wave velocity
"vs": 2400,
#Request window of data in s relative to origin time
"request_window": [-15, 65],
#Mean density in kg/m**3, important for calculating the correct
#observed energy
"rho": 2740,
#Correction factor for free surface
"fs": 2,

#Receiver radius for the Monte Carlo simulation
"rec_radius":  1.0,
#Time step of the Monte Carlo simulation
"dt": 0.2,
#Smooth window length in s
"window_len": 2,
#Number of particles simulated in the Monte Carlo simulation
"particles": 5000000,
#Thikonov regularization paramter
"damping" : 0.3,
#S-wave velocity model in km/s
"v_vel": [0.655,1.210,2.184,2.789,3.848,4.6],
#Layer boundaries of the S-wave velocity model in km
"v_depth": [0.0,1.15,1.90,2.80,3.80,27.0],
#Density model in g/cm**3
"rho_depth": [2.009, 2.196, 2.430, 2.517, 2.660, 2.931],
#Layer boundaries of the attenuation model in km
"att_depth": [0,1.15,1.9,2.8,3.80],
#Kappa/Hurst-exponent values of the attenuation model
"kappa_depth": [0.3,0.3,0.3,0.3,0.3],
#Inversion boundaries of scattering coefficient (1/lstar)
"lstar_bounds": [5, 5000],
#Inversion boundaries of absorption coefficinet
"b_bounds": [-2.5, 0.5],

#Number of generations (Genetic algortihm)
"iteration" : 200,
#Number of the population (Genetic algortihm)
"popsize" : 50,
#Number of parents mating (Genetic algorithm)
"parents" : 25,
#Number of threads used for parallel computing
"ncpu" : 80
}

